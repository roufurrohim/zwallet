/* eslint-disable @next/next/no-img-element */
/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react-hooks/rules-of-hooks */
import React, { useEffect, useState } from "react";
import Sidebar from "../../layout/sidebar";
import styles from "../../styles/Success.module.css";
import Image from "next/image";
import profile from "../../public/profile.png";
import { useRouter } from "next/router";
import { Button, ButtonGroup, ButtonToolbar } from "reactstrap";
import { AiOutlineCheck } from "react-icons/ai";
import Head from "next/head";
import NavbarApps from "../../components/Navbar";
import FooterApps from "../../components/Footer";
import Guard from "../../HOC/guard";
import { BsGrid, BsPerson } from "react-icons/bs";
import { RiArrowUpLine } from "react-icons/ri";
import { AiOutlinePlus, AiOutlineDownload } from "react-icons/ai";
import { FiLogOut, FiShare2 } from "react-icons/fi";
import axios from "axios";
import { API_URL } from "../../helpers";
import moment from "moment-timezone";

const success = () => {
  const [data, setData] = useState({});
  const [dataRec, setDataRec] = useState({});

  useEffect(() => {
    const id = router.query.id;
    const token = localStorage.getItem("token");
    const headers = {
      token,
    };
    axios
      .get(`${API_URL}/details-transactions/${id}`, { headers })
      .then((res) => {
        setData(res.data.result[0]);
        console.log(res.data.result[0]);
        setDataRec(res.data.result[0].receiverUsers);
      })
      .catch((err) => {
        console.log(err.response.data.message);
      });
  }, []);

  const datetime = (data) => {
    const dataTime = moment(`${data}`);
    return dataTime.tz("Asia/Jakarta").format("MMM DD, YYYY - HH.MM");
    // return moment(`${data}`).tz("Asia/Jakarta").format("MMM DD, YYYY - HH.MM");
  };

  const router = useRouter();

  const toDashboard = () => {
    router.push("/home");
  };

  const toTransfer = () => {
    router.push("/transfer");
  };

  const toTopup = () => {
    router.push("/topup");
  };

  const toProfile = () => {
    router.push("/profile");
  };

  const toHomePage = () => {
    router.push("/");
  };

  // number with commas
  const numberWithCommas = (num) => {
    if (num) {
      return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    } else {
      return num;
    }
  };

  return (
    <>
      <Head>
        <title>Zwallet</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <NavbarApps />

        <div className={`container-fluid ${styles.content}`}>
          <div className="row">
            <div className="col-lg-3 d-none d-lg-flex justify-content-end me-5">
              <div className={`${styles.sidebar}`}>
                <ul className="navbar-nav">
                  <li
                    onClick={toDashboard}
                    className={`nav-item my-4 d-flex align-items-center ${styles.navItem}`}
                  >
                    <BsGrid size={28} />
                    <span className="links_name ms-4">Dashboard</span>
                    <span className="tooltip">Dashboard</span>
                  </li>

                  <li
                    onClick={toTransfer}
                    className={`nav-item my-4 d-flex align-items-center  ${styles.navItem}`}
                  >
                    <RiArrowUpLine size={28} />
                    <span className="links_name ms-4">Transfer</span>

                    <span className="tooltip">Transfer</span>
                  </li>

                  <li
                    onClick={toTopup}
                    className={`nav-item my-4 d-flex align-items-center ${styles.navItem}`}
                  >
                    <AiOutlinePlus size={28} />
                    <span className="links_name ms-4">Top Up</span>
                    <span className="tooltip">Top Up</span>
                  </li>

                  <li
                    onClick={toProfile}
                    className={`nav-item my-4 d-flex align-items-center ${styles.navItem}`}
                  >
                    <BsPerson size={28} />
                    <span className="links_name ms-4">Profile</span>
                    <span className="tooltip">Profile</span>
                  </li>

                  <li
                    onClick={toHomePage}
                    className={`nav-item d-flex align-items-center ${styles.navItemLogout}`}
                  >
                    <FiLogOut size={28} />
                    <span className="links_name ms-4">Log out</span>
                    <span className="tooltip">Log out</span>
                  </li>
                </ul>
              </div>
            </div>

            <div className="col-lg-8">
              <div className={`row ${styles.successContent}`}>
                <div className={`col-lg-12 d-flex justify-content-center mt-3`}>
                  <div className={`${styles.packHead}`}>
                    <div className={` ${styles.titleSuccess}`}>
                      <AiOutlineCheck size={32} />
                    </div>
                    <div className="mt-2">
                      <small className={`${styles.noteSuccess}`}>
                        Transfer Success
                      </small>
                    </div>
                  </div>
                </div>
                <div className={`col-lg-12 ${styles.infoContent}`}>
                  <div className={`row mb-3 ${styles.cardContact}`}>
                    <div className="col-lg-9">
                      <div>
                        <p className={`${styles.titleCardInfo}`}>Amount</p>
                        <p className={`${styles.bodyCardInfo}`}>
                          Rp. {numberWithCommas(data.amount)}
                        </p>
                      </div>
                    </div>
                  </div>

                  <div className={`row mb-3 ${styles.cardContact}`}>
                    <div className="col-lg-9">
                      <div>
                        <p className={`${styles.titleCardInfo}`}>
                          Balance left
                        </p>
                        <p className={`${styles.bodyCardInfo}`}>
                          Rp. {numberWithCommas(data.balance)}
                        </p>
                      </div>
                    </div>
                  </div>

                  <div className={`row mb-3 ${styles.cardContact}`}>
                    <div className="col-lg-9">
                      <div>
                        <p className={`${styles.titleCardInfo}`}>Date & Time</p>
                        <p className={`${styles.bodyCardInfo}`}>
                          {datetime(data.date)}
                        </p>
                      </div>
                    </div>
                  </div>

                  <div className={`row mb-3 ${styles.cardContact}`}>
                    <div className="col-lg-9">
                      <div>
                        <p className={`${styles.titleCardInfo}`}>Notes</p>
                        <p className={`${styles.bodyCardInfo}`}>{data.notes}</p>
                      </div>
                    </div>
                  </div>
                </div>{" "}
                {/*  infoContent */}
                <div className={`${styles.titleTfto}`}>
                  <p>Transfer to</p>
                </div>
                <div className="d-flex flex-column justify-content-center align-items-center">
                  <div className={`row ${styles.cardContactReceiver}`}>
                    <div className="col-lg-9">
                      <div className="row">
                        <div className="col-lg-2 col-4">
                          <img
                            src={`${API_URL}/${dataRec.image}`}
                            // src={profile}
                            alt="profile"
                            className={`${styles.imageProfileReceiver}`}
                            width={70}
                            height={70}
                          />
                        </div>

                        <div
                          className={`col-8 d-flex flex-column ${styles.infoReceiver}`}
                        >
                          <span
                            className={`text-capitalize ${styles.nameProfileNav}`}
                          >
                            {`${dataRec.first_name} ${dataRec.last_name}`}
                          </span>
                          <small className={`${styles.statusTrans}`}>
                            +62 {dataRec.phone}
                          </small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="d-flex justify-content-lg-end justify-content-center align-items-center">
                  <Button
                    onClick={toDashboard}
                    className={`me-lg-3 ${styles.btnShare}`}
                  >
                    <FiShare2 size={28} />
                  </Button>
                  <Button
                    onClick={toDashboard}
                    className={`mx-lg-3 d-lg-block d-none ${styles.btnDwld}`}
                  >
                    <AiOutlineDownload size={28} className="me-3" />
                    <small>Download PDF</small>
                  </Button>
                  <Button
                    onClick={toDashboard}
                    className={`ms-3 me-lg-5 ${styles.backToHome}`}
                  >
                    Back To Home
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className={`${styles.footerSuccess}`}>
          <FooterApps />
        </div>
      </div>
    </>
  );
};

export default Guard(success);
